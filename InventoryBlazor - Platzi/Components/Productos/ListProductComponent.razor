@using Entities
@using Business

<label>Filtro de Categorias</label>
<div class="row">

    <div class="col-8">
        <select class="form-control" @onchange="Filtrado">

            <option>Selecciona una categoria..</option>
            @foreach ( var category in categories)
            {
                <option value="@category.CategoryId">@category.CategoryName</option>
            }

        </select>
    </div>

    <div class="col-4 ">
        <a href="/product/create" class="btn btn-success float-end" style="text-decoration:none; color:white;">Crear Nuevo</a>
    </div>
</div>
<hr />

<table class="table table-hover table-bordered"> 
    <thead>
        <tr>
            <th>Referencia </th>
            <th>Nombre del Producto</th>
            <th>Cantidad</th>
            <th>Categoria</th>
            <th>Accion</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var product in tempProducts)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.TotalQuantity</td>
                <td>@product.CategoryId</td>

                <td>
                    <a type="button" 
                    class="btn btn-primary" 
                    href="/product/update/@product.ProductId">Editar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<ProductEntity> products = new List<ProductEntity>();
    List<ProductEntity> tempProducts = new List<ProductEntity>();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        tempProducts = products;
        categories = B_Category.CategoryList();
    }

    private void Filtrado(ChangeEventArgs e)
    {
        tempProducts = products.Where(c => c.CategoryId == e.Value.ToString()).ToList();
    }

}
