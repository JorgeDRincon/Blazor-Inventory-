@using Entities;
@using Business;
@inject NavigationManager NavManager;

<EditForm Model="oStorage">
    <div class="form-group">
        <label>Referencia</label>
        <InputSelect class="form-control" @bind-Value="oStorage.WarehouseId"> 
            <option value="">Seleccione una bodega... </option>
            @foreach (var warehouse in warehouses)
            {
                <option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>
            }
        </InputSelect>
    </div>
    
    <div class="form-group my-4">
        <label>Productos</label>
        <InputSelect class="form-control" @bind-Value="@oStorage.ProductId"> 
            <option value="">Seleccione una bodega... </option>
            @foreach (var product in products)
            {
                <option value="@product.ProductId">@product.ProductName</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-success" @onclick="CreateStorage">Crear Bodega</button>

</EditForm>

<div class="text-center h2">
    <p>@message</p>
</div>

@code {
    StorageEntity oStorage = new StorageEntity();

    //Listas de productos y bodegas
    List<ProductEntity> products = new List<ProductEntity>();
    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();

    string message = "";

    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        warehouses = B_Warehouse.WarehouseList();
    }

    private void CreateStorage()
    {
        oStorage.StorageId = $"{oStorage.WarehouseId}--{oStorage.ProductId}";

        if (!B_Storage.IsProductInWarehouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now;
            B_Storage.CreateStorage(oStorage);

            message = "Tu producto ha sido agregado exitosamente";
        }
        else
        {
            message = "Tu producto ya existe en la bodega";
        }
    }
}
